{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cafe/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/images/fly-to-top.png","path":"images/fly-to-top.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/js/elevator.js","path":"js/elevator.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/js/posts.js","path":"js/posts.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/js/is.js","path":"js/is.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cafe/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/duoshuo/embed.js","path":"duoshuo/embed.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/jquery/jquery.min.js","path":"jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/themes/screenshots/Cafe.png","path":"themes/screenshots/Cafe.png","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/cafe/.bowerrc","hash":"09b4947b6c6f8e300f4927b96a487f16f02d702a","modified":1499525706000},{"_id":"themes/cafe/.gitignore","hash":"63963cef8fc919257215ff980c3c34b7b0951754","modified":1499525706000},{"_id":"themes/cafe/README_en.md","hash":"a346042e7d7d4205bae48e86c894969d08485be6","modified":1499525706000},{"_id":"themes/cafe/README.md","hash":"7a338b1c256c07955989882333d82dc5349680de","modified":1499525706000},{"_id":"themes/cafe/bower.json","hash":"06dc924ce808e3363bb31eddc023433ea588a30d","modified":1499525706000},{"_id":"themes/cafe/cafe-qrcode.png","hash":"4fef2c889376a208a49aa92c582b147e7e005d23","modified":1499525706000},{"_id":"themes/cafe/_config.yml","hash":"f28ea8e0cfb2a2250391f5079b7ea8579d3aba21","modified":1500742030000},{"_id":"themes/cafe/package.json","hash":"81290c217cc42ded73ddf637c865b664a4aed53c","modified":1499525706000},{"_id":"themes/cafe/webpack.config.js","hash":"ad9a245e554affab9d5fc46c753c1978bdd4e640","modified":1499525706000},{"_id":"source/_posts/ng-select-ng-options.md","hash":"e53e92ac21ffa137f25b01c9f27d8cfc35161521","modified":1526033896713},{"_id":"source/_posts/spring-hebernate-数据查询.md","hash":"5148497d75417902c930710910fa519b8b8c8f90","modified":1526033775393},{"_id":"source/_posts/mysql学习笔记.md","hash":"0b71f5df71fcf12aecb18cbe00b950b6d4cff5cf","modified":1524746758777},{"_id":"source/_posts/test.md","hash":"640b357bb168e44a69aac7fa30e90b1d04da36d7","modified":1501190326000},{"_id":"source/_posts/服务器上的数据库使用.md","hash":"b7ca2abe1377ccb16c50156ce54e993cd095e6c5","modified":1526033596542},{"_id":"source/_posts/关于spring的c层测试.md","hash":"2ed04f8935845d0bea0f840dcbf2bc7009d3b2d8","modified":1501190256000},{"_id":"themes/cafe/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1499525706000},{"_id":"source/about/index.md","hash":"0214f68858425c1f2aadcd2859047dc07cf5a243","modified":1500743424000},{"_id":"source/_posts/Echart的使用和形成指令.md","hash":"e893e51938422142a390c66db79f5f707c0fe14e","modified":1522464780891},{"_id":"themes/cafe/.git/FETCH_HEAD","hash":"42163cab1c531da9df69561b8d62dd82c7e5b280","modified":1499526204000},{"_id":"themes/cafe/.git/ORIG_HEAD","hash":"ee5fcaedadc36a3fc117d11645d9f896d0295bd1","modified":1499526204000},{"_id":"themes/cafe/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1499525416000},{"_id":"source/_posts/springmvc-注释及部分语句的记录.md","hash":"f3b27a0ac6c431addf5ee20cb01fcaa6e784f9b2","modified":1501362100000},{"_id":"themes/cafe/.git/config","hash":"fd4571017cc98ab0d16935dfe61f3664b285c2b2","modified":1499525706000},{"_id":"themes/cafe/.git/packed-refs","hash":"0708400921340a87eedd4f8551bf9b511d75896f","modified":1499525706000},{"_id":"themes/cafe/assets/duoshuo_comment.png","hash":"33402149f82b66ff4ed405f44beb06eb0172b6de","modified":1499525706000},{"_id":"themes/cafe/scripts/extend.generator.js","hash":"adf14a21221a8b9667f6ea1d1f6ad6fb28eb5d74","modified":1499525706000},{"_id":"themes/cafe/scripts/fancybox.js","hash":"dd6c9e7cf9019a001eef26d58357e768584107cd","modified":1499525706000},{"_id":"themes/cafe/.git/index","hash":"396a8f3b4ac10c85ede2523126d87cac596df060","modified":1522465228462},{"_id":"themes/cafe/assets/share.png","hash":"823926d9cb8985ceb93a119ef138f9638a8ead1a","modified":1499525706000},{"_id":"themes/cafe/layout/category.ejs","hash":"f46e99e5b68c2ee67bdab068b1da4029bc09847d","modified":1499525706000},{"_id":"themes/cafe/layout/archive.ejs","hash":"11912b8e50dafbe9b0a65df0beaeab64fde90abe","modified":1499525706000},{"_id":"themes/cafe/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1499525706000},{"_id":"themes/cafe/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1499525706000},{"_id":"themes/cafe/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1499525706000},{"_id":"themes/cafe/layout/tag.ejs","hash":"4349f382b07603f9d2c03dd4df70ddea9b9a035c","modified":1499525706000},{"_id":"themes/cafe/languages/default.yml","hash":"fa29b6eaff7c2adb38586748e35487294323ed7d","modified":1499525706000},{"_id":"themes/cafe/languages/en.yml","hash":"1fe9eaf256639fea43c30790129276a5d557db36","modified":1499525706000},{"_id":"themes/cafe/languages/nl.yml","hash":"eac2a6928ea9bf65c44a5cb7c620b1103f066558","modified":1499525706000},{"_id":"themes/cafe/languages/no.yml","hash":"b3d1684075aa7178f59cb1ac6e9cb5f7664b797b","modified":1499525706000},{"_id":"themes/cafe/languages/ru.yml","hash":"1db37462baa63725618bf45a1357b960df89c20d","modified":1499525706000},{"_id":"themes/cafe/languages/zh-CN.yml","hash":"00bd1677cd9ad8b3581ec54260ac7096c32049a3","modified":1499525706000},{"_id":"themes/cafe/languages/zh-TW.yml","hash":"de2bb429c3c75ce89321b233a04e0237466dbf49","modified":1499525706000},{"_id":"themes/cafe/layout/_scripts/index.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1499525706000},{"_id":"themes/cafe/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1499525416000},{"_id":"themes/cafe/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1499525416000},{"_id":"themes/cafe/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1499525416000},{"_id":"themes/cafe/source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1499525706000},{"_id":"themes/cafe/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1499525416000},{"_id":"themes/cafe/.git/logs/HEAD","hash":"b5bb4459afe0036224d44557816bb8d8c36729b5","modified":1499525706000},{"_id":"themes/cafe/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1499525416000},{"_id":"themes/cafe/layout/_third-part/index.ejs","hash":"a44b02c9fdeb63e130dc789a3fd7c9d4a413b370","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/after-footer.ejs","hash":"7cb13c479a5eff78d96a90ab2ca7dc4d31907ca8","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/archive-post.ejs","hash":"d4c33584464f238acc5c3bdb4698d7399f9638a8","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/article.ejs","hash":"0dca4c13e9702bef3a40abb4948fccc6812958d8","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/comments.ejs","hash":"84b80c47ce52bdf103dda0f2559df4a6223b5183","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/footer.ejs","hash":"a1627a239dc8c4c8864ad611d0b7d53dede33e1d","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/archive.ejs","hash":"fbf0ab448b94fa2064ef809601d51eaa4f497236","modified":1499525706000},{"_id":"themes/cafe/layout/layout.ejs","hash":"38f0162183c1714924063ecab4ba3d64d98090a9","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/head.ejs","hash":"20b6b18d1e0d6ec14ba558208fe7f36ec2dff0e9","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/header.ejs","hash":"28d3e43eb3fd6dcdc0d273aaa063bd200be58e4c","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/sidebar.ejs","hash":"7dad154b4d825845c739d0105b7e3773d0cf8822","modified":1499525706000},{"_id":"themes/cafe/layout/partials/hot-comment-posts.ejs","hash":"2829226af9640dbb98e49e4349460baf7ec1f77b","modified":1499525706000},{"_id":"themes/cafe/layout/partials/lastest-comments.ejs","hash":"a49dc7faa2316783b836a8b227ff677bf43f5c7d","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/random_posts.ejs","hash":"40e651a0b85eaafc6351bee2c776c9dc53562a77","modified":1499525706000},{"_id":"themes/cafe/layout/partials/back2top.ejs","hash":"7962c3bd00150d577c0a16c695557aa3690e394e","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/friendly_link.ejs","hash":"bf3f3542894fc952819821233a071735c74012af","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/category.ejs","hash":"d2a14d884080efddf2c4f3b0829d33b4fba46595","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/hot_comment_posts.ejs","hash":"85e643a3b3df886f84488c6fac1a81bb8abf9091","modified":1499525706000},{"_id":"themes/cafe/layout/partials/pagination.ejs","hash":"7c4780ee5b9dad0a46c5caf422965bdcb1dc3664","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/lastest_comments.ejs","hash":"170a773c94b99f653d3cb1fb968fb9715b78a88d","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/post_content.ejs","hash":"94bfe5713747e2f91d036549460220aa7d3b6a5b","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/archive.ejs","hash":"16b4f2c9e92c61c9b0ba4355f331ef43a1da69f0","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/recent_posts.ejs","hash":"35ad60dbcdf5ba099a6cd7d61b4addb64023ceeb","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/widget.ejs","hash":"da7939823193ada87f2f873c7ed3213430000645","modified":1499525706000},{"_id":"themes/cafe/layout/partials/recent-posts.ejs","hash":"72f76ca49eb9640054a32725ef462e8085e1ca43","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/wechat.ejs","hash":"200f8e54879b7116e45f82c9a8118ef7df2417e6","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/social.ejs","hash":"23e3d73d52a1a9759b8c7800641e96022e2cb84f","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/tagcloud.ejs","hash":"28b18597ff7132c0c2b22b89a1e1fd4f3c31292c","modified":1499525706000},{"_id":"themes/cafe/source/_data/themes.yml","hash":"51a446e543e5ab821905351baa1edbfdc59826ab","modified":1499525706000},{"_id":"themes/cafe/source/css/_extend.styl","hash":"cf7f7bf06ade097d841019e901c64ea5fcbf622f","modified":1499525706000},{"_id":"themes/cafe/source/css/_variables.styl","hash":"1f4d6146611009bd78e981b5be6fdf84197a35f8","modified":1499525706000},{"_id":"themes/cafe/layout/_widget/tag.ejs","hash":"51c3bcba8815677fc09919857205e48038fb0fef","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1499525706000},{"_id":"themes/cafe/source/images/fly-to-top.png","hash":"f189038da3c68a8012e924185a1faee98bde3003","modified":1499525706000},{"_id":"themes/cafe/source/js/elevator.js","hash":"e97932b797d4315fe5586d7538db513f18169956","modified":1499525706000},{"_id":"themes/cafe/source/js/posts.js","hash":"571a988f26d56252436dd7911d0bcb22857e03df","modified":1522464801063},{"_id":"themes/cafe/source/js/is.js","hash":"7e5820c0d5c688eb257ca436f583cb1762f986d4","modified":1499525706000},{"_id":"themes/cafe/source/css/style.styl","hash":"2ef9f14cb66a8be749ca1d95242396994b64e889","modified":1499525706000},{"_id":"themes/cafe/source/js/script.js","hash":"4f8175622792da79b3b1fded60f5e15aa0bb067b","modified":1499525706000},{"_id":"themes/cafe/.git/refs/heads/master","hash":"ee5fcaedadc36a3fc117d11645d9f896d0295bd1","modified":1499525706000},{"_id":"themes/cafe/source/duoshuo/embed.js","hash":"f63d86822d86d2154b065d12303c4a889c40664d","modified":1499525706000},{"_id":"themes/cafe/source/jquery/jquery.min.js","hash":"745ab5d6e434cf8d321779da3c527b6d301e2b50","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/duoshuo.ejs","hash":"50a681fe3a30e6c42b91fd9beea8ea23f8328cee","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/disqus.ejs","hash":"3bd41bc585b46d7e14f4abfe1fd130950e88e1e4","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/index.ejs","hash":"9a358fa1d7c965a054e2fb4fc0ed32d0472518bc","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/gitment.ejs","hash":"25c71114ff0ede012d2dcb72cfb4e821f1744634","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/gentie.ejs","hash":"eeaee1a1c958c6c4b1fb066b9e1b7cada9a9471d","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/youyan.ejs","hash":"40a49f44f934711d2f37e23827d60822305e1f2d","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/duoshuo.ejs","hash":"467563b555d584b7b9de85a543445ff35c3157f9","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/mathjax/index.ejs","hash":"c4c3995ef543c1295dc9a619582b98b2857d0ca1","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1499525706000},{"_id":"themes/cafe/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1499525706000},{"_id":"themes/cafe/layout/_third-part/comments/changyan.ejs","hash":"1c94583c27c972e9e5161a453d96c5bb377bf21e","modified":1499525706000},{"_id":"themes/cafe/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1499525706000},{"_id":"themes/cafe/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/article.styl","hash":"37ce987f08ba6bc6af42d838536bc90f07ad48fa","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/comment.styl","hash":"d43ee49803bfe4d718fcf69921169b68f2cd994f","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/custom.styl","hash":"f162ddfa65c268d79425e8c143688481f559ad2c","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/archive.styl","hash":"77197dd5240eb0a4d77daf7bd977858ae83eda68","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/footer.styl","hash":"27a0d5b8bd34319fdb4d066859753c9dac0bdf26","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/duoshuo.styl","hash":"6c9ac4fae2a2d8afedd63f5a8c95b1942cbd59b0","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/other.styl","hash":"cc89dc51b9a6fb12a4d38b7c591e022ab767fcc1","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/header.styl","hash":"ea3d77cfcc7244a737eea2bf1017e0c6abe69be3","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/highlight.styl","hash":"acaf6574b14afcac8e54b4f868f514e4339be509","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/random-post.styl","hash":"4fd4efb828bdcd01d3c3047ca2c5983eeabb9a43","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/sidebar-aside.styl","hash":"935e66df775d2f855f15587d9e3891f1ed54bc27","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/sidebar.styl","hash":"6180892f6fc4d152bbf74664bbdaa7c87cdc6ba2","modified":1499525706000},{"_id":"themes/cafe/source/css/_partial/social.styl","hash":"814e011e94b0f2e4f7583d58c6ca8a745009f2e4","modified":1499525706000},{"_id":"themes/cafe/.git/objects/pack/pack-7ed0faef0226a68259c2d00cdf3126a78d725efc.idx","hash":"978ac9f89ad46629194c11491c4322a05462a896","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1499525706000},{"_id":"themes/cafe/source/themes/screenshots/Cafe.png","hash":"6f639068117b8d44005730864cc0b05a11b28d73","modified":1499525706000},{"_id":"themes/cafe/.git/logs/refs/heads/master","hash":"b5bb4459afe0036224d44557816bb8d8c36729b5","modified":1499525706000},{"_id":"themes/cafe/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1499525706000},{"_id":"themes/cafe/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1499525706000},{"_id":"themes/cafe/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1499525706000},{"_id":"themes/cafe/.git/logs/refs/remotes/origin/HEAD","hash":"b5bb4459afe0036224d44557816bb8d8c36729b5","modified":1499525706000},{"_id":"themes/cafe/source/css/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1499525706000},{"_id":"themes/cafe/assets/pc-display.gif","hash":"fb84eb2ba958b1e02ad5e178a6f367a561cd9252","modified":1499525706000},{"_id":"themes/cafe/assets/mobie-display.gif","hash":"d20f7aa46d9bf618ba1ebaf9b6bda71b030f0ce9","modified":1499525706000},{"_id":"themes/cafe/.git/objects/pack/pack-7ed0faef0226a68259c2d00cdf3126a78d725efc.pack","hash":"e221fb09435ce6022b5d4335b9708e5cf3581298","modified":1499525706000}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-07-22T09:04:06.000Z","_content":"**河北工业大学的一位普通的软件班学生**\n\n- 致力于在编程这条路上走的更远","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-07-22 17:04:06\n---\n**河北工业大学的一位普通的软件班学生**\n\n- 致力于在编程这条路上走的更远","updated":"2017-07-22T17:10:24.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjh1t8kat0008vov4vrt44i9p","content":"<p><strong>河北工业大学的一位普通的软件班学生</strong></p>\n<ul>\n<li>致力于在编程这条路上走的更远</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>河北工业大学的一位普通的软件班学生</strong></p>\n<ul>\n<li>致力于在编程这条路上走的更远</li>\n</ul>\n"}],"Post":[{"title":"ng-select ng-options","date":"2018-05-11T10:17:21.000Z","_content":" 最近一段时间的项目中遇到了很多的关于下拉框的场景，当时只是模仿原有的项目代码，并没有深入的理解，为此写此博客将该问题深入进行理解。\n\n<!--more-->\n\n<!--more-->\n\n主要是对ng-options的学习\n\n下面现将ng-options的几个典型的用法列出来\n在<select>指令中ng-model 与 ng-options 配合使用\n\nngOption针对不同类型的数据源有不同的用法，主要体现在数组和对象上，因为我们主要使用数组，所以下面主要讲数组。\n\nlabel for value in array \n这是最简单的一个只是简单的将数组中对象的lable属性显示出来，ng-model的值还是value。\n\nselect as label for value in array\n这种写法中涉及到as的使用，当前的显示还依然是lable的值，但是ng-model的值已经发生了改变，成为了select中的值\n\nlabel group by group for value in array\n这种写法涉及到group for的使用当前的显示还是lable,但回按照group分组，ng-model的值为value\n\n label for value in array  track by trackexpr\n这条指令涉及到track by 的使用用于唯一确定数组中的迭代项的表达式,当lable相同时，指定唯一的value值与ng-model绑定\n\n\n当数据源为对象时\nlabel for ( key , value ) in object\n为大概使用模式，就是将value改为 ( key , value )如下形式，ng-model默认绑定model\n\n在学习上面几种写法时，发现track by 的使用不太好理解,用官网上的例子说明一下。\nThis will work:\n\n<select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n$scope.selected = $scope.items[0];\n\nbut this will not work:\n\n<select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n$scope.selected = $scope.items[0].subItem;\n\n第一个你可以通过ng-model来唯一确定数组中的迭代项，items[0]里面包含item.id\n第二个你会发现items[0].subItem不能确定item.id","source":"_posts/ng-select-ng-options.md","raw":"---\ntitle: ng-select ng-options\ndate: 2018-05-11 18:17:21\ntags:\n---\n 最近一段时间的项目中遇到了很多的关于下拉框的场景，当时只是模仿原有的项目代码，并没有深入的理解，为此写此博客将该问题深入进行理解。\n\n<!--more-->\n\n<!--more-->\n\n主要是对ng-options的学习\n\n下面现将ng-options的几个典型的用法列出来\n在<select>指令中ng-model 与 ng-options 配合使用\n\nngOption针对不同类型的数据源有不同的用法，主要体现在数组和对象上，因为我们主要使用数组，所以下面主要讲数组。\n\nlabel for value in array \n这是最简单的一个只是简单的将数组中对象的lable属性显示出来，ng-model的值还是value。\n\nselect as label for value in array\n这种写法中涉及到as的使用，当前的显示还依然是lable的值，但是ng-model的值已经发生了改变，成为了select中的值\n\nlabel group by group for value in array\n这种写法涉及到group for的使用当前的显示还是lable,但回按照group分组，ng-model的值为value\n\n label for value in array  track by trackexpr\n这条指令涉及到track by 的使用用于唯一确定数组中的迭代项的表达式,当lable相同时，指定唯一的value值与ng-model绑定\n\n\n当数据源为对象时\nlabel for ( key , value ) in object\n为大概使用模式，就是将value改为 ( key , value )如下形式，ng-model默认绑定model\n\n在学习上面几种写法时，发现track by 的使用不太好理解,用官网上的例子说明一下。\nThis will work:\n\n<select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n$scope.selected = $scope.items[0];\n\nbut this will not work:\n\n<select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n$scope.selected = $scope.items[0].subItem;\n\n第一个你可以通过ng-model来唯一确定数组中的迭代项，items[0]里面包含item.id\n第二个你会发现items[0].subItem不能确定item.id","slug":"ng-select-ng-options","published":1,"updated":"2018-05-11T10:18:16.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8k1x0000vov422tm2k3j","content":"<p> 最近一段时间的项目中遇到了很多的关于下拉框的场景，当时只是模仿原有的项目代码，并没有深入的理解，为此写此博客将该问题深入进行理解。</p>\n<a id=\"more\"></a>\n<!--more-->\n<p>主要是对ng-options的学习</p>\n<p>下面现将ng-options的几个典型的用法列出来<br>在<select>指令中ng-model 与 ng-options 配合使用</select></p>\n<p>ngOption针对不同类型的数据源有不同的用法，主要体现在数组和对象上，因为我们主要使用数组，所以下面主要讲数组。</p>\n<p>label for value in array<br>这是最简单的一个只是简单的将数组中对象的lable属性显示出来，ng-model的值还是value。</p>\n<p>select as label for value in array<br>这种写法中涉及到as的使用，当前的显示还依然是lable的值，但是ng-model的值已经发生了改变，成为了select中的值</p>\n<p>label group by group for value in array<br>这种写法涉及到group for的使用当前的显示还是lable,但回按照group分组，ng-model的值为value</p>\n<p> label for value in array  track by trackexpr<br>这条指令涉及到track by 的使用用于唯一确定数组中的迭代项的表达式,当lable相同时，指定唯一的value值与ng-model绑定</p>\n<p>当数据源为对象时<br>label for ( key , value ) in object<br>为大概使用模式，就是将value改为 ( key , value )如下形式，ng-model默认绑定model</p>\n<p>在学习上面几种写法时，发现track by 的使用不太好理解,用官网上的例子说明一下。<br>This will work:</p>\n<p><select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select><br>$scope.selected = $scope.items[0];</p>\n<p>but this will not work:</p>\n<p><select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select><br>$scope.selected = $scope.items[0].subItem;</p>\n<p>第一个你可以通过ng-model来唯一确定数组中的迭代项，items[0]里面包含item.id<br>第二个你会发现items[0].subItem不能确定item.id</p>\n","site":{"data":{}},"excerpt":"<p> 最近一段时间的项目中遇到了很多的关于下拉框的场景，当时只是模仿原有的项目代码，并没有深入的理解，为此写此博客将该问题深入进行理解。</p>","more":"<!--more-->\n<p>主要是对ng-options的学习</p>\n<p>下面现将ng-options的几个典型的用法列出来<br>在<select>指令中ng-model 与 ng-options 配合使用</select></p>\n<p>ngOption针对不同类型的数据源有不同的用法，主要体现在数组和对象上，因为我们主要使用数组，所以下面主要讲数组。</p>\n<p>label for value in array<br>这是最简单的一个只是简单的将数组中对象的lable属性显示出来，ng-model的值还是value。</p>\n<p>select as label for value in array<br>这种写法中涉及到as的使用，当前的显示还依然是lable的值，但是ng-model的值已经发生了改变，成为了select中的值</p>\n<p>label group by group for value in array<br>这种写法涉及到group for的使用当前的显示还是lable,但回按照group分组，ng-model的值为value</p>\n<p> label for value in array  track by trackexpr<br>这条指令涉及到track by 的使用用于唯一确定数组中的迭代项的表达式,当lable相同时，指定唯一的value值与ng-model绑定</p>\n<p>当数据源为对象时<br>label for ( key , value ) in object<br>为大概使用模式，就是将value改为 ( key , value )如下形式，ng-model默认绑定model</p>\n<p>在学习上面几种写法时，发现track by 的使用不太好理解,用官网上的例子说明一下。<br>This will work:</p>\n<p><select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select><br>$scope.selected = $scope.items[0];</p>\n<p>but this will not work:</p>\n<p><select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select><br>$scope.selected = $scope.items[0].subItem;</p>\n<p>第一个你可以通过ng-model来唯一确定数组中的迭代项，items[0]里面包含item.id<br>第二个你会发现items[0].subItem不能确定item.id</p>"},{"title":"spring hebernate 数据查询","date":"2018-05-11T10:14:56.000Z","_content":"\n在使用hebernate的数据查询时总是遇到问题，在此将自己在hebernate中的查询做一下总结\n\n\n<!--more-->\n\n<!--more-->\n\n1.jpa的数据查询\n\n*   直接使用关键字查询，适合单表查询，简单查询,示例代码如下\n\n    Page<MandatoryInstrument>findAllByStatusAndDepartmentAndNextCheckDateBetween(Byte statusNormal, Department department, Date beginDate, Date endDate, Pageable pageable);\n\n方法的名字相当于查询的方法并配合方法的参数进行数据查询\n\n当前方法意思是在当前实体中根据Status，Department，NextCheckDate（在beginDate与endDate之间）这几个属性都为当前实体的属性，通过这几个条件查询满足条件的实体，最后一个参数pageable代表传入分页信息\n\n[参考文档](https://docs.spring.io/spring-data/jpa/docs/2.0.5.RELEASE/reference/html/)\n\n*   使用@query查询，适合多表查询，和复杂查询\n\n当时遇到问题是：不知道@query里面是存放纯sql语句还是有专门语法，后来查了一下里面的语法不是纯sql语句\n\n<colgroup style=\"line-height: 1.57143em;\"><col data-mce-style=\"width: 130px;\" style=\"line-height: 1.57143em; width: 130px;\"><col data-mce-style=\"width: 130px;\" style=\"line-height: 1.57143em; width: 130px;\"></colgroup>\n\n\n@Query(\"select i from #{#entityName} i\" +\n\n\" where i.deviceSet.department = :department \" +\n\n\" and i.lastCheckDate between current_date() and :nextDay \")\n\nPage<StandardDevice> findAllByDepartmentAndLastCheckDateBetweenTodayAndNextDay(@Param(\"nextDay\") Date nextDay, @Param(\"department\") Department department, Pageable pageable);\n\n\n对象比较\n\ni.deviceSet.department = ：department 可以找到当前实体的标准器的部门,并直接与传入的部门参数进行比较\n\n日期处理\n\ni.lastCheckDate between current_date() and :nextDay 检测当前数据的日期是否在今天与下一个时间之间\n\ni.lastCheckDate < current_date() 检测当前数据的日期是否小于今天\n\n多表嵌套查询\n多表查询是使用nativeQuery = true里面使用纯SQL语句\n\n```\n// 查找属于某个部门的非检定员用户\n    @Query(value =\"select *\" +\n            \"from user \" +\n            \"where user.id not in \" +\n            \"(select check_personal.user_id from check_personal)\" +\n            \" and user.department_id = :departmentId\", nativeQuery = true)\n    List<User> findNotCheckUserByDepartmentId(@Param(\"departmentId\") Long departmentId);\n```\n返回查询数据中的前多少条\n\n`@Query(nativeQuery = true,value = \"SELECT  * FROM  sell WHERE sell.id > :lastid  limit :number \")`","source":"_posts/spring-hebernate-数据查询.md","raw":"---\ntitle: spring hebernate 数据查询\ndate: 2018-05-11 18:14:56\ntags:\n---\n\n在使用hebernate的数据查询时总是遇到问题，在此将自己在hebernate中的查询做一下总结\n\n\n<!--more-->\n\n<!--more-->\n\n1.jpa的数据查询\n\n*   直接使用关键字查询，适合单表查询，简单查询,示例代码如下\n\n    Page<MandatoryInstrument>findAllByStatusAndDepartmentAndNextCheckDateBetween(Byte statusNormal, Department department, Date beginDate, Date endDate, Pageable pageable);\n\n方法的名字相当于查询的方法并配合方法的参数进行数据查询\n\n当前方法意思是在当前实体中根据Status，Department，NextCheckDate（在beginDate与endDate之间）这几个属性都为当前实体的属性，通过这几个条件查询满足条件的实体，最后一个参数pageable代表传入分页信息\n\n[参考文档](https://docs.spring.io/spring-data/jpa/docs/2.0.5.RELEASE/reference/html/)\n\n*   使用@query查询，适合多表查询，和复杂查询\n\n当时遇到问题是：不知道@query里面是存放纯sql语句还是有专门语法，后来查了一下里面的语法不是纯sql语句\n\n<colgroup style=\"line-height: 1.57143em;\"><col data-mce-style=\"width: 130px;\" style=\"line-height: 1.57143em; width: 130px;\"><col data-mce-style=\"width: 130px;\" style=\"line-height: 1.57143em; width: 130px;\"></colgroup>\n\n\n@Query(\"select i from #{#entityName} i\" +\n\n\" where i.deviceSet.department = :department \" +\n\n\" and i.lastCheckDate between current_date() and :nextDay \")\n\nPage<StandardDevice> findAllByDepartmentAndLastCheckDateBetweenTodayAndNextDay(@Param(\"nextDay\") Date nextDay, @Param(\"department\") Department department, Pageable pageable);\n\n\n对象比较\n\ni.deviceSet.department = ：department 可以找到当前实体的标准器的部门,并直接与传入的部门参数进行比较\n\n日期处理\n\ni.lastCheckDate between current_date() and :nextDay 检测当前数据的日期是否在今天与下一个时间之间\n\ni.lastCheckDate < current_date() 检测当前数据的日期是否小于今天\n\n多表嵌套查询\n多表查询是使用nativeQuery = true里面使用纯SQL语句\n\n```\n// 查找属于某个部门的非检定员用户\n    @Query(value =\"select *\" +\n            \"from user \" +\n            \"where user.id not in \" +\n            \"(select check_personal.user_id from check_personal)\" +\n            \" and user.department_id = :departmentId\", nativeQuery = true)\n    List<User> findNotCheckUserByDepartmentId(@Param(\"departmentId\") Long departmentId);\n```\n返回查询数据中的前多少条\n\n`@Query(nativeQuery = true,value = \"SELECT  * FROM  sell WHERE sell.id > :lastid  limit :number \")`","slug":"spring-hebernate-数据查询","published":1,"updated":"2018-05-11T10:16:15.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8k230001vov4rtscl7b1"},{"title":"mysql学习笔记","date":"2018-04-26T12:45:58.000Z","_content":"","source":"_posts/mysql学习笔记.md","raw":"---\ntitle: mysql学习笔记\ndate: 2018-04-26 20:45:58\ntags:\n---\n","slug":"mysql学习笔记","published":1,"updated":"2018-04-26T12:45:58.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8k5z0002vov4dijp5fex","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于MarkdownPad2 的安装和使用","date":"2017-07-22T08:25:25.000Z","_content":"关于MarkdownPad2 的安装无法预览和使用\n\n<!--more-->\n\n<!--more-->\n1. 下载与安装 \n-\n**下载链接**\n[https://markdownpad.com/](https://markdownpad.com/)\n- \n-  下载完成后会如果出现效果无法展示的情况\n\n- 应该再下载Awesumium\n\n[https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe](https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe)\n\n之后便可以查看预览效果了\n\n2. 设置中文\n-\n**在tool->option->editor->langurage设置中文即可**","source":"_posts/test.md","raw":"---\ntitle: 关于MarkdownPad2 的安装和使用\ndate: 2017-07-22 16:25:25\ntags:\n- MarkdownPad 2\n---\n关于MarkdownPad2 的安装无法预览和使用\n\n<!--more-->\n\n<!--more-->\n1. 下载与安装 \n-\n**下载链接**\n[https://markdownpad.com/](https://markdownpad.com/)\n- \n-  下载完成后会如果出现效果无法展示的情况\n\n- 应该再下载Awesumium\n\n[https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe](https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe)\n\n之后便可以查看预览效果了\n\n2. 设置中文\n-\n**在tool->option->editor->langurage设置中文即可**","slug":"test","published":1,"updated":"2017-07-27T21:18:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8k630003vov46wwziqbt","content":"<p>关于MarkdownPad2 的安装无法预览和使用</p>\n<a id=\"more\"></a>\n<!--more-->\n<ol>\n<li>下载与安装<br>-<br><strong>下载链接</strong><br><a href=\"https://markdownpad.com/\" target=\"_blank\" rel=\"external\">https://markdownpad.com/</a></li>\n</ol>\n<ul>\n<li></li>\n<li><p>下载完成后会如果出现效果无法展示的情况</p>\n</li>\n<li><p>应该再下载Awesumium</p>\n</li>\n</ul>\n<p><a href=\"https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\" target=\"_blank\" rel=\"external\">https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a></p>\n<p>之后便可以查看预览效果了</p>\n<ol>\n<li>设置中文<br>-<br><strong>在tool-&gt;option-&gt;editor-&gt;langurage设置中文即可</strong></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>关于MarkdownPad2 的安装无法预览和使用</p>","more":"<!--more-->\n<ol>\n<li>下载与安装<br>-<br><strong>下载链接</strong><br><a href=\"https://markdownpad.com/\" target=\"_blank\" rel=\"external\">https://markdownpad.com/</a></li>\n</ol>\n<ul>\n<li></li>\n<li><p>下载完成后会如果出现效果无法展示的情况</p>\n</li>\n<li><p>应该再下载Awesumium</p>\n</li>\n</ul>\n<p><a href=\"https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\" target=\"_blank\" rel=\"external\">https://link.zhihu.com/?target=http%3A//markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a></p>\n<p>之后便可以查看预览效果了</p>\n<ol>\n<li>设置中文<br>-<br><strong>在tool-&gt;option-&gt;editor-&gt;langurage设置中文即可</strong></li>\n</ol>"},{"title":"服务器上的数据库使用","date":"2018-05-11T10:09:56.000Z","_content":"\n最近做安卓实验的时候，负责后台的程序编写，简单的使用了现在项目中的SpringMvc技术，在这次做实验中有很长一段时间在服务器上起环境，在其中的mysql的安装和使用以及数据查询上遇到了一些困难，在这里将问题简单的记录一下。\n\n<!--more-->\n\n<!--more-->\n\n远程登陆数据库\n`ssh -q -l ubuntu -p 22 123.206.75.248`\n\t主要参数说明：\n\n-l 指定登入用户\n-p 设置端口号\n-f 后台运行，并推荐加上 -n 参数\n-n 将标准输入重定向到 /dev/null，防止读取标准输入\n-N 不执行远程命令，只做端口转发\n-q 安静模式，忽略一切对话和错误提示\n-T 禁用伪终端配置\n\n1.安装数据库\n  安装数据库时遇到的问题是，第一次安装的时候将数据库恶用户密码设置为空，担当实际项目连接的时候发现总是在包数据库的密码错误，为此重新安装了一遍数据库，并为他设置密码，之后才能够正确的连接上连接。\n\n2.数据库远程访问\n  之后将将让别人连接本地数据库是也遇到了密码的问题\n通过一下语句来赋予远程权限\n\n```\ngrant all privileges on 库名.表名 to '用户名'@'IP地址' identified by '密码' with grant option;\nflush privileges;\n```\n\n库名:要远程访问的数据库名称,所有的数据库使用“*” \n表名:要远程访问的数据库下的表的名称，所有的表使用“*” \n用户名:要赋给远程访问权限的用户名称 \nIP地址:可以远程访问的电脑的IP地址，所有的地址使用“%” \n密码:要赋给远程访问权限的用户对应使用的密码\n\n示例：`GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'lxh' WITH GRANT OPTION;`\n # 所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\nflush privileges;\n\n2.在服务器上操作数据库\n遇到问题的主要原因是之前长期停留在图形化的操作，对命令行操作很生疏造成的。\n连接数据库：`mysql -u root -p`\n下一步会提示你输入密码。\n\n创建数据库，并指定编码格式：\n`CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;`\n\n注意要在所有的命令之后加上；，我因为分号的问题搞了好长时间。\n","source":"_posts/服务器上的数据库使用.md","raw":"---\ntitle: 服务器上的数据库使用\ndate: 2018-05-11 18:09:56\ntags:\n---\n\n最近做安卓实验的时候，负责后台的程序编写，简单的使用了现在项目中的SpringMvc技术，在这次做实验中有很长一段时间在服务器上起环境，在其中的mysql的安装和使用以及数据查询上遇到了一些困难，在这里将问题简单的记录一下。\n\n<!--more-->\n\n<!--more-->\n\n远程登陆数据库\n`ssh -q -l ubuntu -p 22 123.206.75.248`\n\t主要参数说明：\n\n-l 指定登入用户\n-p 设置端口号\n-f 后台运行，并推荐加上 -n 参数\n-n 将标准输入重定向到 /dev/null，防止读取标准输入\n-N 不执行远程命令，只做端口转发\n-q 安静模式，忽略一切对话和错误提示\n-T 禁用伪终端配置\n\n1.安装数据库\n  安装数据库时遇到的问题是，第一次安装的时候将数据库恶用户密码设置为空，担当实际项目连接的时候发现总是在包数据库的密码错误，为此重新安装了一遍数据库，并为他设置密码，之后才能够正确的连接上连接。\n\n2.数据库远程访问\n  之后将将让别人连接本地数据库是也遇到了密码的问题\n通过一下语句来赋予远程权限\n\n```\ngrant all privileges on 库名.表名 to '用户名'@'IP地址' identified by '密码' with grant option;\nflush privileges;\n```\n\n库名:要远程访问的数据库名称,所有的数据库使用“*” \n表名:要远程访问的数据库下的表的名称，所有的表使用“*” \n用户名:要赋给远程访问权限的用户名称 \nIP地址:可以远程访问的电脑的IP地址，所有的地址使用“%” \n密码:要赋给远程访问权限的用户对应使用的密码\n\n示例：`GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'lxh' WITH GRANT OPTION;`\n # 所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\nflush privileges;\n\n2.在服务器上操作数据库\n遇到问题的主要原因是之前长期停留在图形化的操作，对命令行操作很生疏造成的。\n连接数据库：`mysql -u root -p`\n下一步会提示你输入密码。\n\n创建数据库，并指定编码格式：\n`CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;`\n\n注意要在所有的命令之后加上；，我因为分号的问题搞了好长时间。\n","slug":"服务器上的数据库使用","published":1,"updated":"2018-05-11T10:13:16.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8k670004vov48soryd95","content":"<p>最近做安卓实验的时候，负责后台的程序编写，简单的使用了现在项目中的SpringMvc技术，在这次做实验中有很长一段时间在服务器上起环境，在其中的mysql的安装和使用以及数据查询上遇到了一些困难，在这里将问题简单的记录一下。</p>\n<a id=\"more\"></a>\n<!--more-->\n<p>远程登陆数据库<br><code>ssh -q -l ubuntu -p 22 123.206.75.248</code><br>    主要参数说明：</p>\n<p>-l 指定登入用户<br>-p 设置端口号<br>-f 后台运行，并推荐加上 -n 参数<br>-n 将标准输入重定向到 /dev/null，防止读取标准输入<br>-N 不执行远程命令，只做端口转发<br>-q 安静模式，忽略一切对话和错误提示<br>-T 禁用伪终端配置</p>\n<p>1.安装数据库<br>  安装数据库时遇到的问题是，第一次安装的时候将数据库恶用户密码设置为空，担当实际项目连接的时候发现总是在包数据库的密码错误，为此重新安装了一遍数据库，并为他设置密码，之后才能够正确的连接上连接。</p>\n<p>2.数据库远程访问<br>  之后将将让别人连接本地数据库是也遇到了密码的问题<br>通过一下语句来赋予远程权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant all privileges on 库名.表名 to &apos;用户名&apos;@&apos;IP地址&apos; identified by &apos;密码&apos; with grant option;</div><div class=\"line\">flush privileges;</div></pre></td></tr></table></figure>\n<p>库名:要远程访问的数据库名称,所有的数据库使用“<em>”<br>表名:要远程访问的数据库下的表的名称，所有的表使用“</em>”<br>用户名:要赋给远程访问权限的用户名称<br>IP地址:可以远程访问的电脑的IP地址，所有的地址使用“%”<br>密码:要赋给远程访问权限的用户对应使用的密码</p>\n<p>示例：<code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;lxh&#39; WITH GRANT OPTION;</code></p>\n<h1 id=\"所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\"><a href=\"#所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\" class=\"headerlink\" title=\"所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\"></a>所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库</h1><p>flush privileges;</p>\n<p>2.在服务器上操作数据库<br>遇到问题的主要原因是之前长期停留在图形化的操作，对命令行操作很生疏造成的。<br>连接数据库：<code>mysql -u root -p</code><br>下一步会提示你输入密码。</p>\n<p>创建数据库，并指定编码格式：<br><code>CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</code></p>\n<p>注意要在所有的命令之后加上；，我因为分号的问题搞了好长时间。</p>\n","site":{"data":{}},"excerpt":"<p>最近做安卓实验的时候，负责后台的程序编写，简单的使用了现在项目中的SpringMvc技术，在这次做实验中有很长一段时间在服务器上起环境，在其中的mysql的安装和使用以及数据查询上遇到了一些困难，在这里将问题简单的记录一下。</p>","more":"<!--more-->\n<p>远程登陆数据库<br><code>ssh -q -l ubuntu -p 22 123.206.75.248</code><br>    主要参数说明：</p>\n<p>-l 指定登入用户<br>-p 设置端口号<br>-f 后台运行，并推荐加上 -n 参数<br>-n 将标准输入重定向到 /dev/null，防止读取标准输入<br>-N 不执行远程命令，只做端口转发<br>-q 安静模式，忽略一切对话和错误提示<br>-T 禁用伪终端配置</p>\n<p>1.安装数据库<br>  安装数据库时遇到的问题是，第一次安装的时候将数据库恶用户密码设置为空，担当实际项目连接的时候发现总是在包数据库的密码错误，为此重新安装了一遍数据库，并为他设置密码，之后才能够正确的连接上连接。</p>\n<p>2.数据库远程访问<br>  之后将将让别人连接本地数据库是也遇到了密码的问题<br>通过一下语句来赋予远程权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant all privileges on 库名.表名 to &apos;用户名&apos;@&apos;IP地址&apos; identified by &apos;密码&apos; with grant option;</div><div class=\"line\">flush privileges;</div></pre></td></tr></table></figure>\n<p>库名:要远程访问的数据库名称,所有的数据库使用“<em>”<br>表名:要远程访问的数据库下的表的名称，所有的表使用“</em>”<br>用户名:要赋给远程访问权限的用户名称<br>IP地址:可以远程访问的电脑的IP地址，所有的地址使用“%”<br>密码:要赋给远程访问权限的用户对应使用的密码</p>\n<p>示例：<code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;lxh&#39; WITH GRANT OPTION;</code></p>\n<h1 id=\"所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\"><a href=\"#所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\" class=\"headerlink\" title=\"所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库\"></a>所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库</h1><p>flush privileges;</p>\n<p>2.在服务器上操作数据库<br>遇到问题的主要原因是之前长期停留在图形化的操作，对命令行操作很生疏造成的。<br>连接数据库：<code>mysql -u root -p</code><br>下一步会提示你输入密码。</p>\n<p>创建数据库，并指定编码格式：<br><code>CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</code></p>\n<p>注意要在所有的命令之后加上；，我因为分号的问题搞了好长时间。</p>"},{"title":"关于spring的c层测试及出现问题","date":"2017-07-27T12:18:53.000Z","_content":"**最近在学习spring MVC 时在对contruller的测试时遇到问题在此总结**\n<!--more-->\n\n    this.mockMvc.perform(put(\"/StandardDeviceCheckDetail/update/\" + standardDeviceCheckDetail.getId().toString())\n                .contentType(\"application/json\")\n                .content(jsonObject.toString())\n                .header(\"x-auth-token\", xAuthToken))\n                .andExpect(status().isOk())\n                .andDo(document(\"StandardDeviceCheckDetail_update\", preprocessResponse(prettyPrint())));\n\n**如上图代码所示**\n\n\n1. perform 执行一个RequestBuilder请求，会自动执行SpringMVC的流程并映射到相应的控制器执行处理；\n2. contentType 中添加传送数据的类型\n3. content 模拟发送的数据\n4. header \n5. andDo 添加ResultHandler结果处理器，比如调试时打印结果到控制台（对返回的数据进行的判断\n6. andExpect 添加ResultMatcher验证规则，验证控制器执行完成后结果是否正确（对返回的数据进行的判断）\n7. status.isOk() // 返回的状态是200\n***\n    JSONObject jsonObject = new JSONObject();\n        jsonObject.put(\"id\", standardDeviceCheckDetail.getId());\n        jsonObject.put(\"calibrationDepartment\", \"danweib\");\n**模拟前台写入的数据**\n\n**put(\"字段\"，数据)//把数据传入到字段中**\n\n----------\n**遇到的问题**\n\n**返回状态码为402**\n**问题原因：  请求的方式（get、post、delete）方法与后台规定的方式不符合。\n比如： 后台方法规定的请求方式只接受get，如果用post请求，就会出现 405 method not allowed的提示**\n\n","source":"_posts/关于spring的c层测试.md","raw":"---\ntitle: 关于spring的c层测试及出现问题\ndate: 2017-07-27 20:18:53\ntags:\n- spring mvc\n---\n**最近在学习spring MVC 时在对contruller的测试时遇到问题在此总结**\n<!--more-->\n\n    this.mockMvc.perform(put(\"/StandardDeviceCheckDetail/update/\" + standardDeviceCheckDetail.getId().toString())\n                .contentType(\"application/json\")\n                .content(jsonObject.toString())\n                .header(\"x-auth-token\", xAuthToken))\n                .andExpect(status().isOk())\n                .andDo(document(\"StandardDeviceCheckDetail_update\", preprocessResponse(prettyPrint())));\n\n**如上图代码所示**\n\n\n1. perform 执行一个RequestBuilder请求，会自动执行SpringMVC的流程并映射到相应的控制器执行处理；\n2. contentType 中添加传送数据的类型\n3. content 模拟发送的数据\n4. header \n5. andDo 添加ResultHandler结果处理器，比如调试时打印结果到控制台（对返回的数据进行的判断\n6. andExpect 添加ResultMatcher验证规则，验证控制器执行完成后结果是否正确（对返回的数据进行的判断）\n7. status.isOk() // 返回的状态是200\n***\n    JSONObject jsonObject = new JSONObject();\n        jsonObject.put(\"id\", standardDeviceCheckDetail.getId());\n        jsonObject.put(\"calibrationDepartment\", \"danweib\");\n**模拟前台写入的数据**\n\n**put(\"字段\"，数据)//把数据传入到字段中**\n\n----------\n**遇到的问题**\n\n**返回状态码为402**\n**问题原因：  请求的方式（get、post、delete）方法与后台规定的方式不符合。\n比如： 后台方法规定的请求方式只接受get，如果用post请求，就会出现 405 method not allowed的提示**\n\n","slug":"关于spring的c层测试","published":1,"updated":"2017-07-27T21:17:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8kas0007vov4tnzdppul","content":"<p><strong>最近在学习spring MVC 时在对contruller的测试时遇到问题在此总结</strong><br><a id=\"more\"></a></p>\n<pre><code>this.mockMvc.perform(put(&quot;/StandardDeviceCheckDetail/update/&quot; + standardDeviceCheckDetail.getId().toString())\n            .contentType(&quot;application/json&quot;)\n            .content(jsonObject.toString())\n            .header(&quot;x-auth-token&quot;, xAuthToken))\n            .andExpect(status().isOk())\n            .andDo(document(&quot;StandardDeviceCheckDetail_update&quot;, preprocessResponse(prettyPrint())));\n</code></pre><p><strong>如上图代码所示</strong></p>\n<ol>\n<li>perform 执行一个RequestBuilder请求，会自动执行SpringMVC的流程并映射到相应的控制器执行处理；</li>\n<li>contentType 中添加传送数据的类型</li>\n<li>content 模拟发送的数据</li>\n<li>header </li>\n<li>andDo 添加ResultHandler结果处理器，比如调试时打印结果到控制台（对返回的数据进行的判断</li>\n<li>andExpect 添加ResultMatcher验证规则，验证控制器执行完成后结果是否正确（对返回的数据进行的判断）</li>\n<li>status.isOk() // 返回的状态是200</li>\n</ol>\n<hr>\n<pre><code>JSONObject jsonObject = new JSONObject();\n    jsonObject.put(&quot;id&quot;, standardDeviceCheckDetail.getId());\n    jsonObject.put(&quot;calibrationDepartment&quot;, &quot;danweib&quot;);\n</code></pre><p><strong>模拟前台写入的数据</strong></p>\n<p><strong>put(“字段”，数据)//把数据传入到字段中</strong></p>\n<hr>\n<p><strong>遇到的问题</strong></p>\n<p><strong>返回状态码为402</strong><br><strong>问题原因：  请求的方式（get、post、delete）方法与后台规定的方式不符合。<br>比如： 后台方法规定的请求方式只接受get，如果用post请求，就会出现 405 method not allowed的提示</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>最近在学习spring MVC 时在对contruller的测试时遇到问题在此总结</strong><br>","more":"</p>\n<pre><code>this.mockMvc.perform(put(&quot;/StandardDeviceCheckDetail/update/&quot; + standardDeviceCheckDetail.getId().toString())\n            .contentType(&quot;application/json&quot;)\n            .content(jsonObject.toString())\n            .header(&quot;x-auth-token&quot;, xAuthToken))\n            .andExpect(status().isOk())\n            .andDo(document(&quot;StandardDeviceCheckDetail_update&quot;, preprocessResponse(prettyPrint())));\n</code></pre><p><strong>如上图代码所示</strong></p>\n<ol>\n<li>perform 执行一个RequestBuilder请求，会自动执行SpringMVC的流程并映射到相应的控制器执行处理；</li>\n<li>contentType 中添加传送数据的类型</li>\n<li>content 模拟发送的数据</li>\n<li>header </li>\n<li>andDo 添加ResultHandler结果处理器，比如调试时打印结果到控制台（对返回的数据进行的判断</li>\n<li>andExpect 添加ResultMatcher验证规则，验证控制器执行完成后结果是否正确（对返回的数据进行的判断）</li>\n<li>status.isOk() // 返回的状态是200</li>\n</ol>\n<hr>\n<pre><code>JSONObject jsonObject = new JSONObject();\n    jsonObject.put(&quot;id&quot;, standardDeviceCheckDetail.getId());\n    jsonObject.put(&quot;calibrationDepartment&quot;, &quot;danweib&quot;);\n</code></pre><p><strong>模拟前台写入的数据</strong></p>\n<p><strong>put(“字段”，数据)//把数据传入到字段中</strong></p>\n<hr>\n<p><strong>遇到的问题</strong></p>\n<p><strong>返回状态码为402</strong><br><strong>问题原因：  请求的方式（get、post、delete）方法与后台规定的方式不符合。<br>比如： 后台方法规定的请求方式只接受get，如果用post请求，就会出现 405 method not allowed的提示</strong></p>"},{"title":"Echart的使用和形成指令","date":"2018-03-31T02:29:50.000Z","_content":"Echart的使用与将图标形成指令\n<!--more-->\n\n完成后如下图所示\n\n![image](http://upload-images.jianshu.io/upload_images/5451241-e0d64bffd1c3eb78?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**1\\. Echart的使用**\n\n[官网地址](http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts)\n\n官网教程引入，根据教程可以很简单的完成实例的引入，我主要写关于百分率样式的配置\n\n代码入下所示\n\n```\nvar option = {\n                    title: {\n                        text: {}\n                    },\n                    color: ['#62CB31'],\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: '{b}:\\n{c}%'\n                    },\n                    xAxis: [{\n                        type: '',\n                        data: [],\n                        axisTick: {\n                            alignWithLabel: true\n                        }\n                    }],\n                    yAxis: {\n                        type: 'value',\n                        min: '',\n                        max: '',\n                        axisLabel: {\n                            show: true,\n                            interval: 'auto',\n                            formatter: '{value} %'\n                        }\n                    },\n                    series: [{\n                        name: '',\n                        type: 'bar',\n                        data: [],\n                        itemStyle: {\n                            normal: {\n                                color: function(params) {\n                                   var colorList = CommonService.getChartBarColor();\n                                    return colorList[params.dataIndex % colorList.length];\n                                },\n                                label: {\n                                    show: true,\n                                    position: 'top',\n                                    formatter: '{b}\\n{c}%'\n                                }\n                            }\n                        },\n                        axisLabel: {\n                            show: true,\n                            interval: 'auto',\n                            formatter: '{value} %'\n                        },\n                        barWidth: 70\n                    }]\n                };\n```\n1.1 y轴的百分比显示\n```\naxisLabel: {\n               show: true,\n               interval: 'auto',\n               formatter: '{value} %'\n}\n```\n1.2 柱形上的显示与多颜色的加入\n```\n itemStyle: {\n                            normal: {\n                                color: function(params) {\n                                   var colorList = CommonService.getChartBarColor();\n                                    return colorList[params.dataIndex % colorList.length];\n                                },\n                                label: {\n                                    show: true,\n                                    position: 'top',\n                                    formatter: '{b}\\n{c}%'\n                                }\n                            }\n                        }\n```\n**2\\. 指令的使用**\n\n```\n<yunzhi-chart-bar data-chart-name = \"chartName\" data-chart-xdata=\"chartXData\" data-chart-ymax=\"chartYMax\" data-chart-ymin=\"chartYMin\" data-chart-dar=\"chartDarData\"></yunzhi-chart-bar>\n```\n\n外部数据：图表名称，图标x轴，图表y轴，图表bar内容（数据）\n\n在写指令是遇到问题是`$watch`的多监听\n\n解决如下\n```\nscope.$watch('[chartXdata, chartDar, chartName, chartYmin, chartYmax]', function(newValue) {\n                    if (scope.chartDar) {  // 防止第一次数据为空时加载图表\n                        $timeout(function() {\n                            self.setChart();\n                        }, 1000);\n                    }\n                }, true);\n```\n把要监听的对象放入数组中，进行多对监听\n\n","source":"_posts/Echart的使用和形成指令.md","raw":"---\ntitle: Echart的使用和形成指令\ndate: 2018-03-31 10:29:50\ntags: angularjs\n---\nEchart的使用与将图标形成指令\n<!--more-->\n\n完成后如下图所示\n\n![image](http://upload-images.jianshu.io/upload_images/5451241-e0d64bffd1c3eb78?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**1\\. Echart的使用**\n\n[官网地址](http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts)\n\n官网教程引入，根据教程可以很简单的完成实例的引入，我主要写关于百分率样式的配置\n\n代码入下所示\n\n```\nvar option = {\n                    title: {\n                        text: {}\n                    },\n                    color: ['#62CB31'],\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: '{b}:\\n{c}%'\n                    },\n                    xAxis: [{\n                        type: '',\n                        data: [],\n                        axisTick: {\n                            alignWithLabel: true\n                        }\n                    }],\n                    yAxis: {\n                        type: 'value',\n                        min: '',\n                        max: '',\n                        axisLabel: {\n                            show: true,\n                            interval: 'auto',\n                            formatter: '{value} %'\n                        }\n                    },\n                    series: [{\n                        name: '',\n                        type: 'bar',\n                        data: [],\n                        itemStyle: {\n                            normal: {\n                                color: function(params) {\n                                   var colorList = CommonService.getChartBarColor();\n                                    return colorList[params.dataIndex % colorList.length];\n                                },\n                                label: {\n                                    show: true,\n                                    position: 'top',\n                                    formatter: '{b}\\n{c}%'\n                                }\n                            }\n                        },\n                        axisLabel: {\n                            show: true,\n                            interval: 'auto',\n                            formatter: '{value} %'\n                        },\n                        barWidth: 70\n                    }]\n                };\n```\n1.1 y轴的百分比显示\n```\naxisLabel: {\n               show: true,\n               interval: 'auto',\n               formatter: '{value} %'\n}\n```\n1.2 柱形上的显示与多颜色的加入\n```\n itemStyle: {\n                            normal: {\n                                color: function(params) {\n                                   var colorList = CommonService.getChartBarColor();\n                                    return colorList[params.dataIndex % colorList.length];\n                                },\n                                label: {\n                                    show: true,\n                                    position: 'top',\n                                    formatter: '{b}\\n{c}%'\n                                }\n                            }\n                        }\n```\n**2\\. 指令的使用**\n\n```\n<yunzhi-chart-bar data-chart-name = \"chartName\" data-chart-xdata=\"chartXData\" data-chart-ymax=\"chartYMax\" data-chart-ymin=\"chartYMin\" data-chart-dar=\"chartDarData\"></yunzhi-chart-bar>\n```\n\n外部数据：图表名称，图标x轴，图表y轴，图表bar内容（数据）\n\n在写指令是遇到问题是`$watch`的多监听\n\n解决如下\n```\nscope.$watch('[chartXdata, chartDar, chartName, chartYmin, chartYmax]', function(newValue) {\n                    if (scope.chartDar) {  // 防止第一次数据为空时加载图表\n                        $timeout(function() {\n                            self.setChart();\n                        }, 1000);\n                    }\n                }, true);\n```\n把要监听的对象放入数组中，进行多对监听\n\n","slug":"Echart的使用和形成指令","published":1,"updated":"2018-03-31T02:53:00.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8kau0009vov4ryc38l2b","content":"<p>Echart的使用与将图标形成指令<br><a id=\"more\"></a></p>\n<p>完成后如下图所示</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5451241-e0d64bffd1c3eb78?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>1. Echart的使用</strong></p>\n<p><a href=\"http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts\" target=\"_blank\" rel=\"external\">官网地址</a></p>\n<p>官网教程引入，根据教程可以很简单的完成实例的引入，我主要写关于百分率样式的配置</p>\n<p>代码入下所示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">var option = &#123;</div><div class=\"line\">                    title: &#123;</div><div class=\"line\">                        text: &#123;&#125;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    color: [&apos;#62CB31&apos;],</div><div class=\"line\">                    tooltip: &#123;</div><div class=\"line\">                        trigger: &apos;item&apos;,</div><div class=\"line\">                        formatter: &apos;&#123;b&#125;:\\n&#123;c&#125;%&apos;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    xAxis: [&#123;</div><div class=\"line\">                        type: &apos;&apos;,</div><div class=\"line\">                        data: [],</div><div class=\"line\">                        axisTick: &#123;</div><div class=\"line\">                            alignWithLabel: true</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;],</div><div class=\"line\">                    yAxis: &#123;</div><div class=\"line\">                        type: &apos;value&apos;,</div><div class=\"line\">                        min: &apos;&apos;,</div><div class=\"line\">                        max: &apos;&apos;,</div><div class=\"line\">                        axisLabel: &#123;</div><div class=\"line\">                            show: true,</div><div class=\"line\">                            interval: &apos;auto&apos;,</div><div class=\"line\">                            formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    series: [&#123;</div><div class=\"line\">                        name: &apos;&apos;,</div><div class=\"line\">                        type: &apos;bar&apos;,</div><div class=\"line\">                        data: [],</div><div class=\"line\">                        itemStyle: &#123;</div><div class=\"line\">                            normal: &#123;</div><div class=\"line\">                                color: function(params) &#123;</div><div class=\"line\">                                   var colorList = CommonService.getChartBarColor();</div><div class=\"line\">                                    return colorList[params.dataIndex % colorList.length];</div><div class=\"line\">                                &#125;,</div><div class=\"line\">                                label: &#123;</div><div class=\"line\">                                    show: true,</div><div class=\"line\">                                    position: &apos;top&apos;,</div><div class=\"line\">                                    formatter: &apos;&#123;b&#125;\\n&#123;c&#125;%&apos;</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;,</div><div class=\"line\">                        axisLabel: &#123;</div><div class=\"line\">                            show: true,</div><div class=\"line\">                            interval: &apos;auto&apos;,</div><div class=\"line\">                            formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">                        &#125;,</div><div class=\"line\">                        barWidth: 70</div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;;</div></pre></td></tr></table></figure>\n<p>1.1 y轴的百分比显示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">axisLabel: &#123;</div><div class=\"line\">               show: true,</div><div class=\"line\">               interval: &apos;auto&apos;,</div><div class=\"line\">               formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>1.2 柱形上的显示与多颜色的加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">itemStyle: &#123;</div><div class=\"line\">                            normal: &#123;</div><div class=\"line\">                                color: function(params) &#123;</div><div class=\"line\">                                  var colorList = CommonService.getChartBarColor();</div><div class=\"line\">                                    return colorList[params.dataIndex % colorList.length];</div><div class=\"line\">                                &#125;,</div><div class=\"line\">                                label: &#123;</div><div class=\"line\">                                    show: true,</div><div class=\"line\">                                    position: &apos;top&apos;,</div><div class=\"line\">                                    formatter: &apos;&#123;b&#125;\\n&#123;c&#125;%&apos;</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div></pre></td></tr></table></figure></p>\n<p><strong>2. 指令的使用</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;yunzhi-chart-bar data-chart-name = &quot;chartName&quot; data-chart-xdata=&quot;chartXData&quot; data-chart-ymax=&quot;chartYMax&quot; data-chart-ymin=&quot;chartYMin&quot; data-chart-dar=&quot;chartDarData&quot;&gt;&lt;/yunzhi-chart-bar&gt;</div></pre></td></tr></table></figure>\n<p>外部数据：图表名称，图标x轴，图表y轴，图表bar内容（数据）</p>\n<p>在写指令是遇到问题是<code>$watch</code>的多监听</p>\n<p>解决如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope.$watch(&apos;[chartXdata, chartDar, chartName, chartYmin, chartYmax]&apos;, function(newValue) &#123;</div><div class=\"line\">                    if (scope.chartDar) &#123;  // 防止第一次数据为空时加载图表</div><div class=\"line\">                        $timeout(function() &#123;</div><div class=\"line\">                            self.setChart();</div><div class=\"line\">                        &#125;, 1000);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;, true);</div></pre></td></tr></table></figure></p>\n<p>把要监听的对象放入数组中，进行多对监听</p>\n","site":{"data":{}},"excerpt":"<p>Echart的使用与将图标形成指令<br>","more":"</p>\n<p>完成后如下图所示</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5451241-e0d64bffd1c3eb78?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>1. Echart的使用</strong></p>\n<p><a href=\"http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts\" target=\"_blank\" rel=\"external\">官网地址</a></p>\n<p>官网教程引入，根据教程可以很简单的完成实例的引入，我主要写关于百分率样式的配置</p>\n<p>代码入下所示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">var option = &#123;</div><div class=\"line\">                    title: &#123;</div><div class=\"line\">                        text: &#123;&#125;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    color: [&apos;#62CB31&apos;],</div><div class=\"line\">                    tooltip: &#123;</div><div class=\"line\">                        trigger: &apos;item&apos;,</div><div class=\"line\">                        formatter: &apos;&#123;b&#125;:\\n&#123;c&#125;%&apos;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    xAxis: [&#123;</div><div class=\"line\">                        type: &apos;&apos;,</div><div class=\"line\">                        data: [],</div><div class=\"line\">                        axisTick: &#123;</div><div class=\"line\">                            alignWithLabel: true</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;],</div><div class=\"line\">                    yAxis: &#123;</div><div class=\"line\">                        type: &apos;value&apos;,</div><div class=\"line\">                        min: &apos;&apos;,</div><div class=\"line\">                        max: &apos;&apos;,</div><div class=\"line\">                        axisLabel: &#123;</div><div class=\"line\">                            show: true,</div><div class=\"line\">                            interval: &apos;auto&apos;,</div><div class=\"line\">                            formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;,</div><div class=\"line\">                    series: [&#123;</div><div class=\"line\">                        name: &apos;&apos;,</div><div class=\"line\">                        type: &apos;bar&apos;,</div><div class=\"line\">                        data: [],</div><div class=\"line\">                        itemStyle: &#123;</div><div class=\"line\">                            normal: &#123;</div><div class=\"line\">                                color: function(params) &#123;</div><div class=\"line\">                                   var colorList = CommonService.getChartBarColor();</div><div class=\"line\">                                    return colorList[params.dataIndex % colorList.length];</div><div class=\"line\">                                &#125;,</div><div class=\"line\">                                label: &#123;</div><div class=\"line\">                                    show: true,</div><div class=\"line\">                                    position: &apos;top&apos;,</div><div class=\"line\">                                    formatter: &apos;&#123;b&#125;\\n&#123;c&#125;%&apos;</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;,</div><div class=\"line\">                        axisLabel: &#123;</div><div class=\"line\">                            show: true,</div><div class=\"line\">                            interval: &apos;auto&apos;,</div><div class=\"line\">                            formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">                        &#125;,</div><div class=\"line\">                        barWidth: 70</div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;;</div></pre></td></tr></table></figure>\n<p>1.1 y轴的百分比显示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">axisLabel: &#123;</div><div class=\"line\">               show: true,</div><div class=\"line\">               interval: &apos;auto&apos;,</div><div class=\"line\">               formatter: &apos;&#123;value&#125; %&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>1.2 柱形上的显示与多颜色的加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">itemStyle: &#123;</div><div class=\"line\">                            normal: &#123;</div><div class=\"line\">                                color: function(params) &#123;</div><div class=\"line\">                                  var colorList = CommonService.getChartBarColor();</div><div class=\"line\">                                    return colorList[params.dataIndex % colorList.length];</div><div class=\"line\">                                &#125;,</div><div class=\"line\">                                label: &#123;</div><div class=\"line\">                                    show: true,</div><div class=\"line\">                                    position: &apos;top&apos;,</div><div class=\"line\">                                    formatter: &apos;&#123;b&#125;\\n&#123;c&#125;%&apos;</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div></pre></td></tr></table></figure></p>\n<p><strong>2. 指令的使用</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;yunzhi-chart-bar data-chart-name = &quot;chartName&quot; data-chart-xdata=&quot;chartXData&quot; data-chart-ymax=&quot;chartYMax&quot; data-chart-ymin=&quot;chartYMin&quot; data-chart-dar=&quot;chartDarData&quot;&gt;&lt;/yunzhi-chart-bar&gt;</div></pre></td></tr></table></figure>\n<p>外部数据：图表名称，图标x轴，图表y轴，图表bar内容（数据）</p>\n<p>在写指令是遇到问题是<code>$watch</code>的多监听</p>\n<p>解决如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope.$watch(&apos;[chartXdata, chartDar, chartName, chartYmin, chartYmax]&apos;, function(newValue) &#123;</div><div class=\"line\">                    if (scope.chartDar) &#123;  // 防止第一次数据为空时加载图表</div><div class=\"line\">                        $timeout(function() &#123;</div><div class=\"line\">                            self.setChart();</div><div class=\"line\">                        &#125;, 1000);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;, true);</div></pre></td></tr></table></figure></p>\n<p>把要监听的对象放入数组中，进行多对监听</p>"},{"title":"springmvc 注释及部分语句的记录","date":"2017-07-29T12:31:21.000Z","_content":"@API系列 PagingAndSortingRepository 接口 logger日志输出\n<!--more-->\n\n**此博客主要借鉴前人经验，如有不当，敬请指教**\n\n1. Spring MVC 集成 Swagger\n\n  1）.@API表示一个开放的API，可以通过description简要描述该API的功能，一般和 Spring 的 @Controller一起\n\n  2）.在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。\n\n  3).在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的异常情况\n\n  4).@ApiParam用于描述该API操作接受的参数类型\n     @ApiModel用来描述封装的参数对象与返回的参数对象\n     @ApiModelProperty描述ApiModel的属性\n\n\t[https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger](https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger)\n2. springdate 接口之  PagingAndSortingRepository \n\n * PagingAndSortingRepository 接口继承于 CrudRepository 接口，拥有CrudRepository 接口的所有方法， 并新增两个方法：分页和排序。 但是这两个方法不能包含筛选条件*\n\n\t[http://blog.csdn.net/zgf19930504/article/details/50537225](http://blog.csdn.net/zgf19930504/article/details/50537225)\n\t[http://blog.csdn.net/u022812849/article/details/42752547](http://blog.csdn.net/u022812849/article/details/42752547)\n\n3. Java日志框架\n\n\t**添加logger进行日志输出**\n\n\t[http://blog.csdn.net/anialy/article/details/8529188](http://blog.csdn.net/anialy/article/details/8529188)\n\t[http://www.cnblogs.com/ywlaker/p/6124067.html](http://www.cnblogs.com/ywlaker/p/6124067.html)\n\n","source":"_posts/springmvc-注释及部分语句的记录.md","raw":"---\ntitle: springmvc 注释及部分语句的记录\ndate: 2017-07-29 20:31:21\ntags:\n- spring mvc\n---\n@API系列 PagingAndSortingRepository 接口 logger日志输出\n<!--more-->\n\n**此博客主要借鉴前人经验，如有不当，敬请指教**\n\n1. Spring MVC 集成 Swagger\n\n  1）.@API表示一个开放的API，可以通过description简要描述该API的功能，一般和 Spring 的 @Controller一起\n\n  2）.在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。\n\n  3).在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的异常情况\n\n  4).@ApiParam用于描述该API操作接受的参数类型\n     @ApiModel用来描述封装的参数对象与返回的参数对象\n     @ApiModelProperty描述ApiModel的属性\n\n\t[https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger](https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger)\n2. springdate 接口之  PagingAndSortingRepository \n\n * PagingAndSortingRepository 接口继承于 CrudRepository 接口，拥有CrudRepository 接口的所有方法， 并新增两个方法：分页和排序。 但是这两个方法不能包含筛选条件*\n\n\t[http://blog.csdn.net/zgf19930504/article/details/50537225](http://blog.csdn.net/zgf19930504/article/details/50537225)\n\t[http://blog.csdn.net/u022812849/article/details/42752547](http://blog.csdn.net/u022812849/article/details/42752547)\n\n3. Java日志框架\n\n\t**添加logger进行日志输出**\n\n\t[http://blog.csdn.net/anialy/article/details/8529188](http://blog.csdn.net/anialy/article/details/8529188)\n\t[http://www.cnblogs.com/ywlaker/p/6124067.html](http://www.cnblogs.com/ywlaker/p/6124067.html)\n\n","slug":"springmvc-注释及部分语句的记录","published":1,"updated":"2017-07-29T21:01:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh1t8kaw000bvov48jrun5wy","content":"<p>@API系列 PagingAndSortingRepository 接口 logger日志输出<br><a id=\"more\"></a></p>\n<p><strong>此博客主要借鉴前人经验，如有不当，敬请指教</strong></p>\n<ol>\n<li><p>Spring MVC 集成 Swagger</p>\n<p>1）.@API表示一个开放的API，可以通过description简要描述该API的功能，一般和 Spring 的 @Controller一起</p>\n<p>2）.在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。</p>\n<p>3).在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的异常情况</p>\n<p>4).@ApiParam用于描述该API操作接受的参数类型<br>  @ApiModel用来描述封装的参数对象与返回的参数对象<br>  @ApiModelProperty描述ApiModel的属性</p>\n<p> <a href=\"https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger\" target=\"_blank\" rel=\"external\">https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger</a></p>\n</li>\n<li><p>springdate 接口之  PagingAndSortingRepository </p>\n<ul>\n<li><p>PagingAndSortingRepository 接口继承于 CrudRepository 接口，拥有CrudRepository 接口的所有方法， 并新增两个方法：分页和排序。 但是这两个方法不能包含筛选条件*</p>\n<p><a href=\"http://blog.csdn.net/zgf19930504/article/details/50537225\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zgf19930504/article/details/50537225</a><br><a href=\"http://blog.csdn.net/u022812849/article/details/42752547\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u022812849/article/details/42752547</a></p>\n</li>\n</ul>\n</li>\n<li><p>Java日志框架</p>\n<p> <strong>添加logger进行日志输出</strong></p>\n<p> <a href=\"http://blog.csdn.net/anialy/article/details/8529188\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/anialy/article/details/8529188</a><br> <a href=\"http://www.cnblogs.com/ywlaker/p/6124067.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ywlaker/p/6124067.html</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>@API系列 PagingAndSortingRepository 接口 logger日志输出<br>","more":"</p>\n<p><strong>此博客主要借鉴前人经验，如有不当，敬请指教</strong></p>\n<ol>\n<li><p>Spring MVC 集成 Swagger</p>\n<p>1）.@API表示一个开放的API，可以通过description简要描述该API的功能，一般和 Spring 的 @Controller一起</p>\n<p>2）.在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。</p>\n<p>3).在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的异常情况</p>\n<p>4).@ApiParam用于描述该API操作接受的参数类型<br>  @ApiModel用来描述封装的参数对象与返回的参数对象<br>  @ApiModelProperty描述ApiModel的属性</p>\n<p> <a href=\"https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger\" target=\"_blank\" rel=\"external\">https://github.com/albertchendao/demos/tree/master/java/spring/HelloWorld-MVC-Swagger</a></p>\n</li>\n<li><p>springdate 接口之  PagingAndSortingRepository </p>\n<ul>\n<li><p>PagingAndSortingRepository 接口继承于 CrudRepository 接口，拥有CrudRepository 接口的所有方法， 并新增两个方法：分页和排序。 但是这两个方法不能包含筛选条件*</p>\n<p><a href=\"http://blog.csdn.net/zgf19930504/article/details/50537225\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zgf19930504/article/details/50537225</a><br><a href=\"http://blog.csdn.net/u022812849/article/details/42752547\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u022812849/article/details/42752547</a></p>\n</li>\n</ul>\n</li>\n<li><p>Java日志框架</p>\n<p> <strong>添加logger进行日志输出</strong></p>\n<p> <a href=\"http://blog.csdn.net/anialy/article/details/8529188\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/anialy/article/details/8529188</a><br> <a href=\"http://www.cnblogs.com/ywlaker/p/6124067.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ywlaker/p/6124067.html</a></p>\n</li>\n</ol>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjh1t8k630003vov46wwziqbt","tag_id":"cjh1t8ka60005vov45mtm5f8n","_id":"cjh1t8kah0006vov4pkxvxwlb"},{"post_id":"cjh1t8kas0007vov4tnzdppul","tag_id":"cjh1t8kav000avov4y2ytn98s","_id":"cjh1t8kay000dvov4jzueqxn9"},{"post_id":"cjh1t8kau0009vov4ryc38l2b","tag_id":"cjh1t8kay000cvov49rm6jlqc","_id":"cjh1t8kb3000fvov4jvs940bp"},{"post_id":"cjh1t8kaw000bvov48jrun5wy","tag_id":"cjh1t8kav000avov4y2ytn98s","_id":"cjh1t8kb6000gvov47f5m3ith"}],"Tag":[{"name":"MarkdownPad 2","_id":"cjh1t8ka60005vov45mtm5f8n"},{"name":"spring mvc","_id":"cjh1t8kav000avov4y2ytn98s"},{"name":"angularjs","_id":"cjh1t8kay000cvov49rm6jlqc"}]}}